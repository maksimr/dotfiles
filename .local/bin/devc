#!/bin/bash
# Wrapper script to run [devcontainer](https://github.com/devcontainers/cli) commands
# This script is intended to be used in a project with a .devcontainer folder
# It will search for the .devcontainer folder in the current directory or any parent directory
# and execute the devcontainer command in the context of the project
#
# Extend default devcontainer command with:
# - start: Starts the container for the project (alias for up)
# - stop: Stops the running container for the project
# - shell: Starts a shell in the running container for the project

PROJECT_ROOT_DIR="$(pwd)"
DEVCONTAINER_FOLDER=".devcontainer"

function debug() {
  if [ -n "$DEBUG" ]; then
    echo "[DEBUG]: $1"
  fi
}

while [ ! -d "$PROJECT_ROOT_DIR/$DEVCONTAINER_FOLDER" ]; do
  if [ "$PROJECT_ROOT_DIR" == "/" ] || [ -d "$PROJECT_ROOT_DIR/.git" ]; then
    echo "Error: Could not find .devcontainer folder" 1>&2
    exit 1
  fi
  PROJECT_ROOT_DIR=$(dirname "$PROJECT_ROOT_DIR")
  debug "Searching for .devcontainer folder in $PROJECT_ROOT_DIR"
done

DEVCONTAINER_ARGS=()
DEVCONTAINER_COMMAND=""
for arg in "$@"; do
  if [[ "$arg" != "-"* ]] && [ -z "$DEVCONTAINER_COMMAND" ]; then
    DEVCONTAINER_COMMAND="$arg"
  fi

  if [ "$DEVCONTAINER_COMMAND" == "shell" ]; then
    DEVCONTAINER_ARGS+=("exec")
    DEVCONTAINER_ARGS+=("bash")
  elif [ "$DEVCONTAINER_COMMAND" == "start" ]; then
    DEVCONTAINER_ARGS+=("up")
  else
    DEVCONTAINER_ARGS+=("$arg")
  fi
done

if [ "$DEVCONTAINER_COMMAND" == "stop" ]; then
  set -e
  CONTAINER_ID=$(docker ps -q --filter "label=devcontainer.local_folder=$PROJECT_ROOT_DIR")
  if [ -n "$CONTAINER_ID" ]; then
    echo "Stopping container: $CONTAINER_ID"
    docker stop "$CONTAINER_ID"
  else
    debug "No container found to stop for project: $PROJECT_ROOT_DIR"
  fi
  exit 0
fi

if [[ "$*" != *"--workspace-folder"* ]]; then
  DEVCONTAINER_ARGS=("${DEVCONTAINER_ARGS[0]}" "--workspace-folder=$PROJECT_ROOT_DIR" "${DEVCONTAINER_ARGS[@]:1}")
fi

if [ "$(command -v devcontainer)" ]; then
  debug "Executing devcontainer command: devcontainer ${DEVCONTAINER_ARGS[*]}"
  exec "devcontainer" "${DEVCONTAINER_ARGS[@]}"
fi

debug "Executing npx command: npx -y @devcontainers/cli ${DEVCONTAINER_ARGS[*]}"
exec "npx" "-y" "@devcontainers/cli" "${DEVCONTAINER_ARGS[@]}"
