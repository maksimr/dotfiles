# initialize oh-my-zsh
# Note this file should be loaded first!
# vim: ft=zsh

# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

ZSH_THEME="robbyrussell"

# Устанавливаем размер истории команд и файл в котором
# история будет хранится
HISTSIZE=1000
SAVEHIST=1000

plugins=(git vundle vi-mode history-substring-search zsh-syntax-highlighting debian st git-flow-avh)

ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets)

# Добавляем домашнюю директорию bin
# если ее еще нет в переменной $PATH
case ":$PATH:" in
  *:"$HOME/bin":*) ;;
  *) PATH="$HOME/bin:$PATH" ;;
esac

source $ZSH/oh-my-zsh.sh
export NODE_PATH=/usr/local/lib/jsctags/:$NODE_PATH
export EDITOR=vim

PROMPT='%{$fg_bold[red]%}➜ %{$fg_bold[green]%}%p %{$fg[cyan]%}%n:%~ %{$fg_bold[blue]%}$(git_prompt_info)%{$fg_bold[blue]%} % %{$reset_color%}'

# load dotfiles
. ~/.dotfiles/dot.bash 2>/dev/null

# Global alias for zsh
# vim: ft=zsh

alias zshrc="vim ~/.zshrc"
alias up="sudo apt-get update && sudo apt-get upgrade"
alias i="sudo apt-get install "
alias u="sudo apt-get remove "
alias mk="mkdir -p"
alias t="touch"
alias q="exit"
alias rm="rm -rf"
alias nd="node --debug-brk"
alias pl="sudo"

alias l="ls"

alias gg="git grep"

alias c="cd"
alias f="find"
alias e="echo"
alias s="sudo"
alias sa="sudo apt-get"
alias k9="kill -9"
alias disc='df -h'

alias v="vim"
alias vl='vim "$(ls -t | head -1)"' # open last modified file in vim
# open nested last modified file, exclude dotfiles and ot directories
alias vll='vim "$(find . ! \( -path "./.*" -o  -path "*/.*" \) -type f -printf "%T@ %p\n" | sort -n | tail -1 | cut -f2- -d" " )"'

# change some aliases if grc installed
if [ "$(command -v grc)"  ]
then
  alias ll='grc ls -lFh --color=yes'
  alias ping="grc ping"
  alias traceroute="grc traceroute"
  alias make="grc make"
  alias diff="grc diff"
  alias cvs="grc cvs"
  alias netstat="grc netstat"
  alias logc="grc cat"
  alias logt="grc tail"
  alias logh="grc head"
  alias jshint="grc jshint"
fi

# npm
if [ "$(command -v npm)"  ]
then
  alias n="npm"
  alias ni="npm install"
  alias nis="npm install --save"
  alias nisd="npm install --save-dev"
  alias nu="npm uninstall"
  alias nug="npm uninstall -g"
fi

# googlecl
if [ "$(command -v google)"  ]
then
  alias gdoc="google docs"
  alias gcal="google calendar"
fi

alias zshprofiling="/usr/bin/time zsh -i -c exit"

# load local aliases
# it can be rewrited aliases from .local/zsh
. $HOME/.local/alias 2>/dev/null

# autojump
# vim: ft=zsh
if [[ -s "/usr/share/autojump/autojump.sh" || -s "$HOME/.autojump/etc/profile.d/autojump.sh" ]]
then
  source /usr/share/autojump/autojump.sh 2>/dev/null
  source ~/.autojump/etc/profile.d/autojump.sh 2>/dev/null

  autoload -U compinit; compinit
  export AUTOJUMP_IGNORE_CASE=1
  export AUTOJUMP_KEEP_ALL_ENTRIES=1
  export AUTOJUMP_KEEP_SYMLINKS=1
  export AUTOJUMP_AUTOCOMPLETE_CMDS='cp vim'

  # more coolest autojump
  function j(){
    # if we pass directory path
    # then call 'cd'
    if [ -d "$1" ]
    then
      cd "$1"
      return
    fi

    if [ $# -le 1 ]
    then
      # XX
      # split by '/'
      # 'foo/bar' -> 'foo bar'
      local ARGUMENTS="${1//\// }"
      jj ${(s/ /)ARGUMENTS}
      return
    fi

    jj $@
  }

  # source of j command form autojump.sh `which j`
  function jj () {
    local new_path="$(autojump $@)"
    if [ -d "${new_path}" ]
    then
      echo -e "\\033[31m${new_path}\\033[0m"
      cd "${new_path}"
    else
      echo "autojump: directory '${@}' not found"
      echo "Try \`autojump --help\` for more information."
      false
    fi
  }
fi

# Global bindkey file
# vim: ft=zsh

# vi-mode plugin
# add to vim mode some emacs key bindings
bindkey '\C-r' history-incremental-search-backward
bindkey '\C-s' history-incremental-search-forward
bindkey '\C-w' backward-delete-word
bindkey '\C-a' beginning-of-line
bindkey '\C-e' end-of-line
bindkey ' ' magic-space

bindkey -M vicmd '\C-r' history-incremental-search-backward
bindkey -M vicmd '\C-a' beginning-of-line
bindkey -M vicmd '\C-e' end-of-line
bindkey -M vicmd '?' history-incremental-search-forward

# load local bindkey
# it can be rewrited bindkey from .local/zsh
. $HOME/.local/bindkey 2>/dev/null

# XXX optimization loading fasd
fasd_cache="$HOME/.fasd-init-bash"
if [ "$(command -v fasd)" -nt "$fasd_cache" -o ! -s "$fasd_cache"  ]; then
  fasd --init auto >| "$fasd_cache"
fi
source "$fasd_cache"
unset fasd_cache

# fasd
# vim: ft=zsh
if [ "$(command -v fasd)" ]
then

  #eval "$(fasd --init auto)"

  # more coolest fasd
  function ff(){
    local ARGUMENTS
    local ARGV
    local LARG

    if [ ! "$1" ]
    then
      cd "$(fasd -Rl | head -1)"
      return
    fi

    if [ -d "$1" ]
    then
      cd "$1"
      return
    fi

    if [ $# -eq 1 ]
    then
      ARGUMENTS="${1//\// }"
      cd "$(fasd -a ${(s/ /)ARGUMENTS})"
      return
    fi

    if [ $# -ge 2 ]
    then
      ARGV=("$@")
      LARG="$(($# - 1))"
      ARGUMENTS="${ARGV[$#]}"
      # first arguments command
      # last argument is a path
      ARGUMENTS="${ARGUMENTS//\// }"
      fasd -e "${ARGV[@]:0:$LARG}" -a ${(s/ /)ARGUMENTS}
      return
    fi

    cd "$(fasd -a $@)"
  }

  # aliases
  alias f="ff"
  alias fv="ff vim"
  alias vv="fasd -t -e vim -b viminfo"
fi

# Load scripts
# vim: ft=zsh

function {
  local scripts
  scripts=(
    # XXX TODO optimize loading nvm.sh
    # 10ms loading nvm.sh
    ~/.nvm/nvm.sh
    ~/.dvm/dvm.sh
  )

  for src in $scripts
  do
    . $src 2>/dev/null
  done
}

# Different configuration for oh-my-zsh plugins
# vim: ft=zsh

# zsh-syntax-highlighting plugin
# Redifine colors
ZSH_HIGHLIGHT_STYLES[path]='fg=cyan'
ZSH_HIGHLIGHT_STYLES[command]='fg=green,bold'
ZSH_HIGHLIGHT_STYLES[alias]='fg=green,bold'
ZSH_HIGHLIGHT_STYLES[builtin]='fg=green,bold'
ZSH_HIGHLIGHT_STYLES[function]='fg=green,bold'
ZSH_HIGHLIGHT_STYLES[command]='fg=green,bold'

# Global tmux configuration
# vim: ft=zsh

# Run tmux immediately after enter to terminal
# $SHLVL - increase by one every time when we run new bash
# -2 for supporting colors (256)
# I Don't use patched font in terminal
export USE_PATCHED_FONT="false"
if [ $SHLVL = 1   ]; then
  tmux -2 && exit # exit from shell after exit tmux
fi

# load .zshrc.local
if [ -f "$HOME/.zshrc.local" ]; then
  . $HOME/.zshrc.local
fi

# load local zsh files
if [ -d "$HOME/.local/zsh" ]; then
  for lzsh in $(ls "$HOME/.local/zsh"); do
    . $HOME/.local/zsh/$lzsh
  done
fi
