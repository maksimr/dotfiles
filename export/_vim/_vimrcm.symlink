" vimrcm
"
" @description Различное, настройки привязок к клавишам, расширение и т.д.
" @type misc
" 2012-04-22

" открываем .vimrc
nnoremap <leader>ev :vsplit ~/.vimrc<cr>
" загружаем .vimrc в текущую сессию
nnoremap <leader>sv :so ~/.vimrc<cr>

" открывает новую вкладку
nnoremap <leader>nt :tabnew %<cr>

" открываем фаил по пути который под курсором
nnoremap <leader>eo BvEy:exe "vs ".@<cr>

" выход в нормальный режим из insert mode
inoremap jk <esc>
" Learn Vim the Hard Way! T_T
inoremap <esc> <nop>

" wildmenu
" <Left> и <Right> внутри wildmenu перемещают
" курсор, вместо перехода к следующему совпадению
cnoremap <Left> <Space><BS><Left>
cnoremap <Right> <Space><BS><Right>

" tags/ctags/jsctags
" select tag from list
noremap <leader>s g]
" go first matched tag
noremap <leader>o <C-]>

" spell checker
fun! SpellCheckerToggle()
  if &spell
    set nospell
    iunmap <c-l>
    return
  endif

  set spelllang=ru,en
  set spell
  " По <CTRL-L> заменяем неправильное слово на первое из предложенных
  " в списке suggest
  imap <c-l> <c-g>u<Esc>[s1z=<Esc>gi
endfun

nnoremap <leader>c :call SpellCheckerToggle()<cr>

" ↪ Символ, который будет показан перед перенесенной строкой
let &sbr = nr2char(8618).' '

" Увеличивает и уменьшает ширину окна
" <esc> - ALT, потому что ALT или META клавиши не всегда поддерживаются
nnoremap <esc>. :vertical res +10<cr>
nnoremap <esc>, :vertical res -10<cr>

" Поиск и замена слова под курсором
nnoremap \ff :vim /\<<c-r>=expand("<cword>")<cr>\>/ **/*.
nnoremap \s :%s/\<<c-r>=expand("<cword>")<cr>\>/

" clipboard (копирование для во внешний буфер, позволяет использовать дальше
" везде не только в виме)
vnoremap <C-c> "+yy

" автодополнение из словоря
inoremap <c-l> <c-x><c-o>

"CSS
"map <leader>o ?{<CR>jV/^\s*\}\=$<CR>k:sort<CR>:let @/=''<CR>

" открывает окно с текущей директорией
noremap <C-E> :Explore<CR>

" обозреватели открытых файлов
nnoremap <S-e> :BufExplorer<cr>

" vim-translator
" переводчик
noremap g; :Translate<space>

" command-t
noremap <leader>, :CommandT<cr>

" vim-w3m
nnoremap <leader>bb :W3m<space>
nnoremap <leader>bw :W3m<space>http://search.yandex-team.ru/search?text=

" ctrlp.vim
" Open goto symbol on all buffers
nmap <D-R> :CtrlPBufTagAll<cr>
imap <D-R> <esc>:CtrlPBufTagAll<cr>

nnoremap <s-f> mngg=G`n

" <c-r> search in command line
cnoremap <C-r> <Up>

noremap <F10> :cal VimCommanderToggle()<cr>

" set no autoindent
fun! NoAutoIndent()
  :DelimitMateSwitch
  setl noai nocin nosi inde=
endfun

command! NoAutoIndent call NoAutoIndent()


" @desc Autocommands!

augroup JavaScript
    autocmd!

    autocmd FileType javascript noremap <buffer> <LocalLeader>m :Dispatch node %<cr>
    autocmd FileType javascript setlocal omnifunc=javascriptcomplete#CompleteJS
    autocmd FileType javascript compiler node
    " В javascript файлах удаляем пробелы в конце строк при сохранении файла
    autocmd BufWritePre *.js silent exec "%s/\\s\\+$//e"
augroup END

augroup Ruby
    autocmd!

    autocmd BufRead,BufNewFile *.rb compiler ruby
    autocmd BufRead,BufNewFile *_test.rb,test_*.rb compiler rubyunit
    autocmd FileType ruby noremap <buffer> <F5> :make %<cr>
    autocmd FileType ruby,eruby setlocal omnifunc=rubycomplete
augroup END

augroup Html
    autocmd!

    autocmd FileType html setlocal omnifunc=htmlcomplete#CompleteTags
    autocmd FileType xml setlocal omnifunc=xmlcomplete#CompleteTags
augroup END

augroup StyleSheets
    autocmd!

    autocmd FileType css setlocal omnifunc=csscomplete#CompleteCSS
augroup END

augroup Txt
    autocmd!

    autocmd FileType txt setlocal spell
augroup END


" @desc Abbreviation!
iabbrev @@ rv.maksim@yandex.com<left>
