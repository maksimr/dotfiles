{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Dotfiles","google":"","body":"###• Dotfile\r\n\r\nA file that is not visible by default to normal\r\ndirectory-browsing tools (on Unix, files named with a leading dot are,\r\nby convention, not normally presented in directory listings).\r\nMany programs define one or more dot files in which startup or configuration\r\ninformation may be optionally recorded; a user can customize the program's\r\nbehavior by creating the appropriate file in the current or home directory.\r\n\r\nDot files tend to proliferate - with every nontrivial application program defining\r\nat least one, a user's home directory can be filled with scores of dot files,\r\nwithout the user really being aware of it.\r\nCommon examples are .profile, .cshrc, .login, .emacs, .mailrc, .forward, .newsrc, .plan, .rhosts, .sig, .xsession.\r\n\r\nWhile you are working on a PC or laptop, no problems with these files no.\r\nYou can add or correct something in them and continue to work on.\r\n\r\nBut the system can fail and then your files or settings will be lost\r\nat work you will be given a separate computer, which is not yet configured environment.\r\nThen you have time and time again to add or correct configuration files.\r\nAt some point you will want to have configuration files that were identical (synchronized)\r\non your computer and not have to do one thing each time, etc.\r\n\r\nHere comes to help github.com where we can store our dotfiles.\r\nAnd access them from any computer.\r\n\r\nThis solves the problem of storing our files, but only partially solves\r\nthe problem of synchronization.\r\n\r\nEvery time save your changes and send them to a remote server, and then do not forget to other computers to update their tedious.\r\nIn order to solve this problem for myself and I wrote the dotfile script.\r\nThat should solve the problem with the synchronization and organization of system files.\r\nLoad and run.\r\n\r\n\r\n\r\n###• Installation\r\n\r\nTo install you could use the install script (requires Git) using Wget:\r\n\r\n  ```wget -qO- https://raw.github.com/maksimr/dotfiles/master/install.sh | bash```\r\n\r\n\r\n###• Manual install\r\n\r\nIf you have git installed, then just clone it:\r\n\r\n  ```git clone git://github.com/maksimr/dotfiles.git ~/.dotfiles```\r\n\r\nTo activate dotfile, you need to source it from your bash shell\r\n\r\n  ```. ~/.dotfiles/dot.sh```\r\n\r\nYou can add this line to your '.bashrc' or '.zshrc' file to have it automatically sourced upon login.\r\n\r\n\r\n\r\n###• Usage\r\n\r\nAdd symlink to home folder from dotfiles directory:\r\n\r\n  ```dot ln```\r\n\r\nShow list of created symlinks(aliases):\r\n\r\n  ```dot alias```\r\n\r\nRemove all created symlinks:\r\n\r\n  ```dot destroy```\r\n\r\nRemove specific symlink:\r\n\r\n  ```dot destroy .zshrc```\r\n\r\nUpgrade dotfiles:\r\n\r\n  ```dot upgrade```\r\n\r\nSave and add changes to remote server:\r\n\r\n  ```dot save```\r\n\r\nCreate custom symlink and add it to alias list.\r\nIt create symlink '_zshrc' on '.zshrc' to home directory, and add\r\nit to alias list where you can delete it using command 'dot destroy _zshrc':\r\n\r\n  ```dot alias .zshrc _zshrc```\r\n\r\nRun tests for dotfiles manager:\r\n\r\n  ```dot test```\r\n\r\n\r\n\r\n###• Test\r\n\r\nTests writing on 'bats'. You may install 'grunt' and run 'grunt test' for\r\nrunning tests.\r\n\r\n[![Build Status](https://secure.travis-ci.org/maksimr/dotfiles.png)](http://travis-ci.org/maksimr/dotfiles)\r\n","tagline":"❤ This is not only dotfiles, but it also provide dotfiles manager command 'dot'"}